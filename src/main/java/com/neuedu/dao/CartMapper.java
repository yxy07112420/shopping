package com.neuedu.dao;

import com.neuedu.pojo.Cart;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;
@Mapper
public interface CartMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbggenerated
     */
    int insert(Cart record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbggenerated
     */
    Cart selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbggenerated
     */
    List<Cart> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(Cart record);

    /**
     * 根据用户id和商品id查询用户信息
     * @param userId
     * @param productId
     * @return
     */
     Cart selectCartByUserIdAndProductId(@Param("userId") Integer userId, @Param("productId") Integer productId);

    /**
     * 根据用户id查询购物车信息
     * @param userId
     * @return
     */
     List<Cart> selectCartByUserId(Integer userId);

    /**
     * 判断购物车是否全选
     * @param userId
     * @return
     */
     int isCheckedAll(Integer userId);

    /**
     * 删除购物车信息
     */
    int deleteChartByUserIdAndProductList(@Param("userId") Integer userId,@Param("productIdList") List<Integer> productIdList);

    /**
     * 商品是否选中操作
     * @param userId
     * @param productId
     * @param check
     * @return
     */
    int checkedCart(@Param("userId") Integer userId,@Param("productId") Integer productId,@Param("check") Integer check);

    /**
     * 统计购物车中商品的数量
     * @param userId
     * @return
     */
    int select_cart_product_count(Integer userId);

    /**
     * 根据用户id查询已经选中的购物车信息
     */
    List<Cart> selectCartByUserIdAndCheck(Integer userId);

    /**
     * 清空购物车中的商品
     */
    int batchCart(List<Cart> cartList);
}
